{"version":3,"sources":["pages/successful/successful.module.scss","components/common/Loader/Loader.module.scss","components/common/Button/Button.module.scss","components/common/ButtonTransparent/ButtonTransparent.module.scss","pages/exchange/exchange.module.scss","pages/confirmation/confirmation.module.scss","components/common/Loader/Loader.jsx","components/common/Button/Button.jsx","components/common/ButtonTransparent/ButtonTransparent.jsx","api/api.js","store/exchange-reducer.ts","pages/confirmation/confirmation.tsx","pages/successful/successful.tsx","components/common/Select/MySelect.tsx","pages/exchange/exchange.tsx","App.tsx","reportWebVitals.ts","store/store.js","index.tsx"],"names":["module","exports","Loader","props","className","s","loader","width","height","viewBox","fill","xmlns","clip-path","d","opacity","id","transform","Button","isButtonFetching","useSelector","state","exchangePage","button","onClick","text","ButtonTransparent","instance","axios","withCredentials","baseURL","exchangeAPI","get","then","response","data","obj","base","amount","invoicePayMethod","withdrawPayMethod","post","SET_INVOICE","SET_WITHDRAW","SET_INVOICE_CURRENT_METHOD","SET_WITHDRAW_CURRENT_METHOD","SET_INVOICE_AMOUNT","SET_WITHDRAW_AMOUNT","SET_CURRENT_BASE","SET_REQUEST_MESSAGE","TOGGLE_INPUT_IS_FETCHING","TOGGLE_BUTTON_IS_FETCHING","TOGGLE_IS_EXCHANGE_COMPLETED","initialState","invoice","withdraw","invoiceCurrentMethod","withdrawCurrentMethod","invoiceAmount","withdrawAmount","currentBase","requestMessage","isInputFetching","isExchangeСompleted","setInvoice","type","setWithdraw","setInvoiceCurrentMethod","invoiceId","setWithdrawCurrentMethod","withdrawId","setInvoiceAmount","setWithdrawAmount","setCurrentBase","setRequestMessage","toggleInputIsFetching","toggleButtonIsFetching","toggleIsExchangeСompleted","exchangeReducer","action","Confirmation","dispatch","useDispatch","invoiceCurrentMethodID","withdrawCurrentMethodID","invoiceCurrentMethodObj","find","withdrawCurrentMethodObj","invoiceCurrentMethodName","withdrawCurrentMethodName","undefined","name","to","main","classNames","wrapper","element_disabled","title","method","method_title","method_amount","buttons_wrapper","button_left","getState","a","currentAmount","console","log","message","request","Successful","img","button_wrapper","customStyles","control","provided","paddingLeft","paddingRight","color","fontWeight","fontSize","border","isFocused","borderRadius","cursor","boxShadow","borderColor","position","content","right","top","borderRight","borderLeft","borderTop","valueContainer","singleValue","lineHeight","indicatorsContainer","display","menu","marginTop","menuList","paddingTop","paddingBottom","option","padding","isSelected","background","MySelect","useEffect","setOption","defaultValue","value","styles","isSearchable","options","onChange","style","Exchange","invoiceDefault","invoiceToSelect","map","el","label","withdrawToSelect","findIndex","withdrawDefault","methods","method_input_wrapper","method_input","minLength","debounceTimeout","readOnly","e","target","method_input_loader","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f2e5d00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"successful_main__3yjMU\",\"wrapper\":\"successful_wrapper__2zSOw\",\"img\":\"successful_img__2TEN3\",\"title\":\"successful_title__3iPIQ\",\"text\":\"successful_text__2X34C\",\"button_wrapper\":\"successful_button_wrapper__1lmkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2kVR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2O5CV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonTransparent_button__2IhaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"exchange_main__24Gnw\",\"wrapper\":\"exchange_wrapper__2ObsK\",\"methods\":\"exchange_methods__WMC7Q\",\"method\":\"exchange_method__1_9MV\",\"method_title\":\"exchange_method_title__zE5VL\",\"method_input_wrapper\":\"exchange_method_input_wrapper__3mdPq\",\"method_input\":\"exchange_method_input__3qrHa\",\"method_input_loader\":\"exchange_method_input_loader__uQF-3\",\"button_wrapper\":\"exchange_button_wrapper__1A3e4\",\"element_disabled\":\"exchange_element_disabled__13z9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"confirmation_main__1J3Ph\",\"wrapper\":\"confirmation_wrapper__1-Uxo\",\"element_disabled\":\"confirmation_element_disabled__2f3i9\",\"title\":\"confirmation_title__3R92I\",\"method\":\"confirmation_method__bLrlp\",\"method_title\":\"confirmation_method_title__2Inl5\",\"buttons_wrapper\":\"confirmation_buttons_wrapper__2FUAa\",\"button_left\":\"confirmation_button_left__2GAR1\"};","import React from 'react';\r\n\r\nimport s from './Loader.module.scss';\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g clip-path=\"url(#clip0)\">\r\n                    <path d=\"M7.27454 0.16759L8.06904 3.17481C8.67763 3.07954 9.29768 3.07954 9.90627 3.17481L10.7131 0.16759C9.57355 -0.0558632 8.40169 -0.0558632 7.2621 0.16759C7.26213 0.16759 7.27454 0.16759 7.27454 0.16759Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.9\" d=\"M11.1165 3.49758C11.6925 3.72104 12.2288 4.0354 12.7054 4.42862L14.8965 2.21277C14.0232 1.44868 13.009 0.862451 11.911 0.487265L11.1165 3.49758Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.8\" d=\"M13.5838 5.29449C13.977 5.77117 14.2913 6.30744 14.5148 6.88344L17.5251 6.07654C17.1447 4.98195 16.5544 3.97209 15.7872 3.10345L13.5838 5.29449Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.7\" d=\"M14.8966 8.99998C14.8972 9.31157 14.8733 9.62316 14.8252 9.93103L17.8324 10.7379C18.0559 9.59834 18.0559 8.42648 17.8324 7.28689L14.8252 8.06898C14.8733 8.37712 14.8972 8.68839 14.8966 8.99998Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.6\" d=\"M13.5837 12.7055L15.7872 14.8966C16.5513 14.0232 17.1375 13.0091 17.5127 11.9111L14.5023 11.1041C14.2839 11.6835 13.9736 12.2245 13.5837 12.7055Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.5\" d=\"M11.1165 14.5024L11.9234 17.5127C13.017 17.136 14.0269 16.5497 14.8965 15.7872L12.693 13.5838C12.2194 13.9714 11.6872 14.2814 11.1165 14.5024Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.4\" d=\"M7.27455 17.8324C8.41414 18.0558 9.586 18.0558 10.7256 17.8324L9.93109 14.8251C9.3225 14.9204 8.70245 14.9204 8.09386 14.8251L7.27455 17.8324Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.3\" d=\"M3.10359 15.7872C3.97691 16.5513 4.99109 17.1376 6.08909 17.5127L6.896 14.5024C6.32 14.2789 5.78372 13.9646 5.30704 13.5713L3.10359 15.7872Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.2\" d=\"M0.487066 11.9234C0.863835 13.0171 1.45006 14.0269 2.21257 14.8965L4.41602 12.6931C4.02279 12.2164 3.70843 11.6801 3.48497 11.1041L0.487066 11.9234Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.1\" d=\"M2.6226e-06 8.99998C-0.00122786 9.57939 0.0549161 10.1573 0.167591 10.7255L3.1748 9.93099C3.07953 9.3224 3.07953 8.70235 3.1748 8.09376L0.167591 7.28686C0.0558655 7.85111 -0.000313759 8.42493 2.6226e-06 8.99998Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.1\" d=\"M0.487072 6.07653L3.49743 6.88344C3.72088 6.30744 4.03524 5.77117 4.42847 5.29448L2.22502 3.09103C1.45661 3.9634 0.86602 4.97762 0.487072 6.07653Z\" fill=\"#3E7E7C\" />\r\n                    <path opacity=\"0.1\" d=\"M3.10359 2.21277L5.30704 4.41622C5.78372 4.02299 6.32 3.70863 6.896 3.48518L6.08909 0.474821C4.99018 0.854086 3.97596 1.44436 3.10359 2.21277Z\" fill=\"#3E7E7C\" />\r\n                </g>\r\n                <defs>\r\n                    <clipPath id=\"clip0\">\r\n                        <rect width=\"18\" height=\"18\" fill=\"white\" transform=\"matrix(-1 0 0 1 18 0)\" />\r\n                    </clipPath>\r\n                </defs>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../Loader/Loader';\r\n\r\nimport s from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n    //Получаем текущее состояние isButtonFetching\r\n    const isButtonFetching = useSelector((state: any) => state.exchangePage.isButtonFetching);\r\n\r\n    return (\r\n        <div className={s.button} onClick={props.onClick}>\r\n            {isButtonFetching\r\n                ?\r\n                <Loader />\r\n                :\r\n                props.text\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport s from './ButtonTransparent.module.scss';\r\n\r\nconst ButtonTransparent = (props) => {\r\n    return (\r\n        <div className={s.button} onClick={props.onClick}>{props.text}</div>\r\n    )\r\n}\r\n\r\nexport default ButtonTransparent;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"http://perimeter-e.ew.r.appspot.com/\",\r\n});\r\n\r\ninterface QueryStringParams {\r\n    base: 'invoice' | 'withdraw';\r\n    amount: number;\r\n    invoicePayMethod: number;\r\n    withdrawPayMethod: number;\r\n}\r\n\r\ninterface PostBody {\r\n    amount: number;\r\n    base: 'invoice' | 'withdraw';\r\n    invoicePayMethod: number;\r\n    withdrawPayMethod: number;\r\n}\r\n\r\n\r\nexport const exchangeAPI = {\r\n    getCurrency() {\r\n        return (\r\n            instance.get(`payMethods`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n\r\n    getCalculate(obj: QueryStringParams) {\r\n        return (\r\n            instance.get(`payMethods/calculate?base=${obj.base}&amount=${obj.amount}&invoicePayMethod=${obj.invoicePayMethod}&withdrawPayMethod=${obj.withdrawPayMethod}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n\r\n    sendExchangeRequest(obj: PostBody) {\r\n        return (\r\n            instance.post(`bids`, {\r\n                amount: `${obj.amount}`,\r\n                base: `${obj.base}`,\r\n                invoicePayMethod: `${obj.invoicePayMethod}`,\r\n                withdrawPayMethod: `${obj.withdrawPayMethod}`\r\n            })\r\n        )\r\n    }\r\n};\r\n","import { exchangeAPI } from \"api/api\";\r\n\r\nconst SET_INVOICE = 'SET_INVOICE';\r\nconst SET_WITHDRAW = 'SET_WITHDRAW';\r\nconst SET_INVOICE_CURRENT_METHOD = 'SET_INVOICE_CURRENT_METHOD';\r\nconst SET_WITHDRAW_CURRENT_METHOD = 'SET_WITHDRAW_CURRENT_METHOD';\r\nconst SET_INVOICE_AMOUNT = 'SET_INVOICE_AMOUNT';\r\nconst SET_WITHDRAW_AMOUNT = 'SET_WITHDRAW_AMOUNT';\r\nconst SET_CURRENT_BASE = 'SET_CURRENT_BASE';\r\nconst SET_REQUEST_MESSAGE = 'SET_REQUEST_MESSAGE';\r\nconst TOGGLE_INPUT_IS_FETCHING = 'TOGGLE_INPUT_IS_FETCHING';\r\nconst TOGGLE_BUTTON_IS_FETCHING = 'TOGGLE_BUTTON_IS_FETCHING';\r\nconst TOGGLE_IS_EXCHANGE_COMPLETED = 'TOGGLE_IS_EXCHANGE_COMPLETED';\r\n\r\nexport interface PayMethod {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface Response {\r\n    invoice: PayMethod[];\r\n    withdraw: PayMethod[];\r\n}\r\n\r\ninterface initialState extends Response {\r\n    invoiceCurrentMethod: null | number;\r\n    withdrawCurrentMethod: null | number;\r\n    invoiceAmount: null | number;\r\n    withdrawAmount: null | number;\r\n    currentBase: string;\r\n    requestMessage: string;\r\n    isInputFetching: boolean;\r\n    isButtonFetching: boolean;\r\n    isExchangeСompleted: boolean;\r\n}\r\n\r\nlet initialState: initialState = {\r\n    invoice: [],\r\n    withdraw: [],\r\n    invoiceCurrentMethod: null,\r\n    withdrawCurrentMethod: null,\r\n    invoiceAmount: null,\r\n    withdrawAmount: null,\r\n    currentBase: '',\r\n    requestMessage: '',\r\n    isInputFetching: false, //preloader\r\n    isButtonFetching: false, //preloader\r\n    isExchangeСompleted: false\r\n};\r\n\r\nconst exchangeReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n\r\n        case SET_INVOICE: {\r\n            return {\r\n                ...state,\r\n                invoice: [...action.invoice]\r\n            }\r\n        }\r\n\r\n        case SET_WITHDRAW: {\r\n            return {\r\n                ...state,\r\n                withdraw: [...action.withdraw]\r\n            }\r\n        }\r\n\r\n        case SET_INVOICE_CURRENT_METHOD: {\r\n            return {\r\n                ...state,\r\n                invoiceCurrentMethod: action.invoiceId\r\n            }\r\n        }\r\n\r\n        case SET_WITHDRAW_CURRENT_METHOD: {\r\n            return {\r\n                ...state,\r\n                withdrawCurrentMethod: action.withdrawId\r\n            }\r\n        }\r\n\r\n        case SET_INVOICE_AMOUNT: {\r\n            return {\r\n                ...state,\r\n                invoiceAmount: action.invoiceAmount\r\n            }\r\n        }\r\n\r\n        case SET_WITHDRAW_AMOUNT: {\r\n            return {\r\n                ...state,\r\n                withdrawAmount: action.withdrawAmount\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_BASE: {\r\n            return {\r\n                ...state,\r\n                currentBase: action.currentBase\r\n            }\r\n        }\r\n\r\n        case SET_REQUEST_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                requestMessage: action.requestMessage\r\n            }\r\n        }\r\n\r\n        case TOGGLE_INPUT_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isInputFetching: action.isInputFetching\r\n            }\r\n        }\r\n\r\n        case TOGGLE_BUTTON_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isButtonFetching: action.isButtonFetching\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_EXCHANGE_COMPLETED: {\r\n            return {\r\n                ...state,\r\n                isExchangeСompleted: action.isExchangeСompleted\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//AC\r\nexport const setInvoice = (invoice: any) => ({\r\n    type: SET_INVOICE,\r\n    invoice\r\n});\r\n\r\nexport const setWithdraw = (withdraw: any) => ({\r\n    type: SET_WITHDRAW,\r\n    withdraw\r\n});\r\n\r\nexport const setInvoiceCurrentMethod = (invoiceId: any) => ({\r\n    type: SET_INVOICE_CURRENT_METHOD,\r\n    invoiceId: invoiceId\r\n});\r\n\r\nexport const setWithdrawCurrentMethod = (withdrawId: any) => ({\r\n    type: SET_WITHDRAW_CURRENT_METHOD,\r\n    withdrawId: withdrawId\r\n});\r\n\r\nexport const setInvoiceAmount = (invoiceAmount: number) => ({\r\n    type: SET_INVOICE_AMOUNT,\r\n    invoiceAmount: invoiceAmount\r\n});\r\n\r\nexport const setWithdrawAmount = (withdrawAmount: number) => ({\r\n    type: SET_WITHDRAW_AMOUNT,\r\n    withdrawAmount: withdrawAmount\r\n});\r\n\r\nexport const setCurrentBase = (currentBase: string) => ({\r\n    type: SET_CURRENT_BASE,\r\n    currentBase: currentBase\r\n});\r\n\r\nexport const setRequestMessage = (requestMessage: string) => ({\r\n    type: SET_REQUEST_MESSAGE,\r\n    requestMessage: requestMessage\r\n});\r\n\r\nexport const toggleInputIsFetching = (isInputFetching: boolean) => ({\r\n    type: TOGGLE_INPUT_IS_FETCHING,\r\n    isInputFetching\r\n});\r\n\r\nexport const toggleButtonIsFetching = (isButtonFetching: boolean) => ({\r\n    type: TOGGLE_BUTTON_IS_FETCHING,\r\n    isButtonFetching\r\n});\r\n\r\nexport const toggleIsExchangeСompleted = (isExchangeСompleted: boolean) => ({\r\n    type: TOGGLE_IS_EXCHANGE_COMPLETED,\r\n    isExchangeСompleted\r\n});\r\n\r\n\r\n//TC\r\n//запрашиваем списки платежных методов с сервера\r\nexport const getCurrency = () => async (dispatch: any) => {\r\n    //side-effect\r\n    let response = await exchangeAPI.getCurrency();\r\n    console.log(response);\r\n    dispatch(setInvoice(response.invoice));\r\n    dispatch(setWithdraw(response.withdraw));\r\n\r\n    try {\r\n        //side-effect\r\n        let response = await exchangeAPI.getCurrency();\r\n\r\n        console.log(response);\r\n        dispatch(setInvoice(response.invoice));\r\n        dispatch(setWithdraw(response.withdraw));\r\n\r\n    } catch (error) {\r\n        if (error.response) {\r\n            console.log(error.response);\r\n            console.log(error.response.data);\r\n        } else if (error.request) {\r\n            console.log(error.request);\r\n        } else {\r\n            console.log('Error', error.message);\r\n        }\r\n    }\r\n};\r\n\r\n//запрашиваем расчет суммы обмена для поля ввода Buy(withdraw)\r\nexport const getWithdraw = (value: number) => async (dispatch: any, getState: any) => {\r\n\r\n    dispatch(toggleInputIsFetching(true));\r\n    dispatch(setInvoiceAmount(value));\r\n\r\n    const invoiceAmount = getState().exchangePage.invoiceAmount;\r\n    const invoicePayMethod = getState().exchangePage.invoiceCurrentMethod;\r\n    const withdrawPayMethod = getState().exchangePage.withdrawCurrentMethod;\r\n\r\n    try {\r\n        //side-effect\r\n        let response = await exchangeAPI.getCalculate({\r\n            base: 'invoice',\r\n            amount: invoiceAmount,\r\n            invoicePayMethod: invoicePayMethod,\r\n            withdrawPayMethod: withdrawPayMethod\r\n        });\r\n\r\n        console.log(response);\r\n        dispatch(setWithdraw(response.amount));\r\n        dispatch(setCurrentBase('invoice'));\r\n        dispatch(toggleInputIsFetching(false));\r\n        dispatch(toggleIsExchangeСompleted(true));\r\n\r\n    } catch (error) {\r\n        if (error.response) {\r\n            console.log(error.response);\r\n            console.log(error.response.data);\r\n        } else if (error.request) {\r\n            console.log(error.request);\r\n        } else {\r\n            console.log('Error', error.message);\r\n        }\r\n    }\r\n};\r\n\r\n//запрашиваем расчет суммы обмена для поля ввода Sell(invoice)\r\nexport const getInvoice = (value: number) => async (dispatch: any, getState: any) => {\r\n\r\n    dispatch(toggleInputIsFetching(true));\r\n    dispatch(setWithdrawAmount(value));\r\n\r\n    const withdrawAmount = getState().exchangePage.withdrawAmount;\r\n    const withdrawPayMethod = getState().exchangePage.withdrawCurrentMethod;\r\n    const invoicePayMethod = getState().exchangePage.invoiceCurrentMethod;\r\n\r\n    try {\r\n        //side-effect\r\n        let response = await exchangeAPI.getCalculate({\r\n            base: 'withdraw',\r\n            amount: withdrawAmount,\r\n            invoicePayMethod: invoicePayMethod,\r\n            withdrawPayMethod: withdrawPayMethod\r\n        });\r\n\r\n        console.log(response);\r\n        dispatch(setInvoice(response.amount));\r\n        dispatch(setCurrentBase('withdraw'));\r\n        dispatch(toggleInputIsFetching(false));\r\n        dispatch(toggleIsExchangeСompleted(true));\r\n\r\n    } catch (error) {\r\n        if (error.response) {\r\n            console.log(error.response);\r\n            console.log(error.response.data);\r\n        } else if (error.request) {\r\n            console.log(error.request);\r\n        } else {\r\n            console.log('Error', error.message);\r\n        }\r\n    }\r\n};\r\n\r\n//отправляем запрос на создание заявки на обмен\r\nexport const sendExchangeRequest = () => async (dispatch: any, getState: any) => {\r\n\r\n    dispatch(toggleButtonIsFetching(true));\r\n\r\n    const currentBase = getState().exchangePage.currentBase;\r\n    const invoicePayMethod = getState().exchangePage.invoiceCurrentMethod;\r\n    const withdrawPayMethod = getState().exchangePage.withdrawCurrentMethod;\r\n\r\n    let currentAmount: number;\r\n    const invoiceAmount = getState().exchangePage.invoiceAmount;\r\n    const withdrawAmount = getState().exchangePage.withdrawAmount;\r\n\r\n    if (currentBase == 'invoice') {\r\n        currentAmount = invoiceAmount;\r\n    } else {\r\n        currentAmount = withdrawAmount;\r\n    }\r\n\r\n\r\n    try {\r\n        //side-effect\r\n        let response = await exchangeAPI.sendExchangeRequest({\r\n            amount: currentAmount,\r\n            base: currentBase,\r\n            invoicePayMethod: invoicePayMethod,\r\n            withdrawPayMethod: withdrawPayMethod\r\n        });\r\n\r\n        console.log(response);\r\n        dispatch(toggleButtonIsFetching(false));\r\n        dispatch(setRequestMessage(response.message));\r\n\r\n    } catch (error) {\r\n        if (error.response) {\r\n            console.log(error.response);\r\n            console.log(error.response.data);\r\n        } else if (error.request) {\r\n            console.log(error.request);\r\n        } else {\r\n            console.log('Error', error.message);\r\n        }\r\n    }\r\n};\r\n\r\n//обнуляем поля обмена при нажатии на кнопку \"Home\"\r\nexport const clearExchange = () => async (dispatch: any) => {\r\n    dispatch(setInvoiceCurrentMethod(null));\r\n    dispatch(setWithdrawCurrentMethod(null));\r\n    dispatch(setInvoiceAmount(0));\r\n    dispatch(setWithdrawAmount(0));\r\n    dispatch(setCurrentBase(''));\r\n    dispatch(setRequestMessage(''));\r\n    dispatch(toggleInputIsFetching(false));\r\n    dispatch(toggleButtonIsFetching(false));\r\n    dispatch(toggleIsExchangeСompleted(false));\r\n};\r\n\r\nexport default exchangeReducer;","import classNames from 'classnames';\r\nimport Button from 'components/common/Button/Button';\r\nimport ButtonTransparent from 'components/common/ButtonTransparent/ButtonTransparent';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { sendExchangeRequest } from 'store/exchange-reducer';\r\n\r\nimport s from './confirmation.module.scss';\r\n\r\nconst Confirmation = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //определяем выбранные названия валют для \"Sell\" и \"Buy\"\r\n    const invoiceCurrentMethodID = useSelector((state: any) => state.exchangePage.invoiceCurrentMethod);\r\n    const withdrawCurrentMethodID = useSelector((state: any) => state.exchangePage.withdrawCurrentMethod);\r\n\r\n    const invoiceCurrentMethodObj = useSelector((state: any) => state.exchangePage.invoice.find((obj: any) => obj.id === invoiceCurrentMethodID));\r\n    const withdrawCurrentMethodObj = useSelector((state: any) => state.exchangePage.withdraw.find((obj: any) => obj.id === withdrawCurrentMethodID));\r\n\r\n    let invoiceCurrentMethodName = '';\r\n    let withdrawCurrentMethodName = '';\r\n\r\n    if (invoiceCurrentMethodObj != undefined) {\r\n        invoiceCurrentMethodName = invoiceCurrentMethodObj.name;\r\n    }\r\n\r\n    if (withdrawCurrentMethodObj != undefined) {\r\n        withdrawCurrentMethodName = withdrawCurrentMethodObj.name;\r\n    }\r\n\r\n    //определяем текущие значения для \"Sell\" и \"Buy\"\r\n    const invoiceAmount = useSelector((state: any) => state.exchangePage.invoiceAmount);\r\n    const withdrawAmount = useSelector((state: any) => state.exchangePage.withdrawAmount);\r\n\r\n    \r\n    //определяем успешность создания заявки на обмен (получено ли сообщение)\r\n    const requestMessage = useSelector((state: any) => state.exchangePage.requestMessage);\r\n\r\n    //Получаем текущее состояние isButtonFetching\r\n    const isButtonFetching = useSelector((state: any) => state.exchangePage.isButtonFetching);\r\n\r\n    //клик по кнопке \"Confirm\"\r\n    const onClickConfirm = () => {\r\n        dispatch(sendExchangeRequest());\r\n    }\r\n\r\n    if (requestMessage) {\r\n        return <Redirect to={\"/successful\"} />\r\n    }\r\n\r\n    return (\r\n        <section className={s.main}>\r\n            <h1 className=\"visually_hidden\">Confirmation page</h1>\r\n\r\n            <div className={isButtonFetching ? classNames(s.wrapper, s.element_disabled) : s.wrapper}>\r\n\r\n\r\n                <p className={s.title}>Details</p>\r\n\r\n                <div className={s.method}>\r\n                    <p className={s.method_title}>Sell</p>\r\n                    <p className={s.method_amount}>\r\n                        <span>{invoiceAmount}</span>\r\n                        &nbsp;\r\n                        <span>{invoiceCurrentMethodName}</span>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className={s.method}>\r\n                    <p className={s.method_title}>Buy</p>\r\n                    <p className={s.method_amount}>\r\n                        <span>{withdrawAmount}</span>\r\n                        &nbsp;\r\n                        <span>{withdrawCurrentMethodName}</span>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className={s.buttons_wrapper}>\r\n                    <NavLink to=\"/exchange\" className={s.button_left}>\r\n                        <ButtonTransparent text=\"Cancel\" />\r\n                    </NavLink>\r\n\r\n                    <div onClick={onClickConfirm}>\r\n                        <Button text=\"Confirm\" />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Confirmation;","import Button from 'components/common/Button/Button';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { clearExchange } from 'store/exchange-reducer';\r\n\r\nimport s from './successful.module.scss';\r\n\r\nconst Successful = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //определяем полученное сообщение после создания заявки на обмен\r\n    const requestMessage = useSelector((state: any) => state.exchangePage.requestMessage);\r\n\r\n    return (\r\n        <section className={s.main}>\r\n            <h1 className=\"visually_hidden\">Successful page</h1>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.img}>\r\n                    <svg width=\"110\" height=\"110\" viewBox=\"0 0 110 110\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M52.6544 99.7058C54.0019 100.425 55.6931 100.421 57.0406 99.7013C93.7623 79.9746 96.3702 41.4333 96.3381 30.4746C96.3346 29.5938 96.0743 28.7332 95.5891 27.9981C95.104 27.2629 94.4149 26.6853 93.6064 26.3358L56.7106 9.99167C56.1234 9.73285 55.4887 9.59956 54.847 9.60035C54.2053 9.60113 53.5709 9.73598 52.9844 9.99625L16.3452 26.3404C15.5486 26.6901 14.8693 27.2613 14.3882 27.9862C13.9072 28.711 13.6446 29.5589 13.6318 30.4288C13.476 41.3325 15.6714 79.9563 52.6544 99.7058ZM39.7568 47.1763L50.2664 57.6858L69.9427 38.0096L76.4235 44.4904L50.2664 70.6475L33.276 53.6571L39.7568 47.1763Z\" fill=\"#58B4AE\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <p className={s.title}>Success!</p>\r\n                <p className={s.text}>\r\n                    {requestMessage || 'Your exchange order has been placed successfully and will be processed soon.'}\r\n                </p>\r\n\r\n                <div className={s.button_wrapper}>\r\n                    <NavLink to=\"/exchange\">\r\n                        <Button text=\"Home\" onClick={() => dispatch(clearExchange())} />\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Successful;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { setInvoiceCurrentMethod } from 'store/exchange-reducer';\r\n\r\nconst customStyles = {\r\n\r\n    //SELECT\r\n    control: (provided: any, state: any) => ({\r\n        ...provided,\r\n        width: 313,\r\n        height: 46,\r\n        paddingLeft: 18,\r\n        paddingRight: 50,\r\n\r\n        color: '#3A3A3A',\r\n        fontWeight: 500,\r\n        fontSize: 18,\r\n\r\n        border: state.isFocused ? '1px solid #58B4AE' : '1px solid #CBCBCB',\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        boxShadow: '0 0 0 1px transparent',\r\n\r\n        ':hover': {\r\n            borderColor: '#58B4AE',\r\n        },\r\n\r\n        ':after': {\r\n            position: 'absolute',\r\n            content: '\" \"',\r\n            right: 20,\r\n            top: 20,\r\n\r\n            borderRight: '5px solid transparent',\r\n            borderLeft: '5px solid transparent',\r\n            borderTop: state.isFocused ? '6px solid #58B4AE' : '6px solid #3A3A3A',\r\n\r\n            transform: state.isFocused && 'rotate(-180deg)'\r\n        },\r\n\r\n        ':hover:after': {\r\n            borderTop: '6px solid #58B4AE',\r\n        },\r\n    }),\r\n\r\n    valueContainer: () => ({\r\n        paddingLeft: 0\r\n    }),\r\n\r\n    singleValue: (provided: any) => ({\r\n        ...provided,\r\n        lineHeight: 1.5,\r\n        paddingRight: 50\r\n    }),\r\n\r\n    indicatorsContainer: () => ({\r\n        display: 'none'\r\n    }),\r\n\r\n    //OPTION\r\n    menu: (provided: any, state: any) => ({\r\n        ...provided,\r\n        marginTop: 0,\r\n\r\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.16)',\r\n        borderRadius: 4\r\n    }),\r\n\r\n    menuList: (provided: any, state: any) => ({\r\n        ...provided,\r\n        paddingTop: 8,\r\n        paddingBottom: 8\r\n    }),\r\n\r\n    option: (provided: any, state: any) => ({\r\n        ...provided,\r\n        padding: '10px 20px',\r\n\r\n        color: state.isSelected ? '#3A3A3A' : '#3A3A3A',\r\n        fontWeight: 500,\r\n        fontSize: 18,\r\n\r\n        background: state.isSelected ? '#def1f0' : state.isFocused ? '#F4F4F4' : 'white',\r\n    }),\r\n\r\n}\r\n\r\nconst MySelect = (props: any) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //записываем в state начальное значение селекта\r\n    useEffect(() => {\r\n        dispatch(props.setOption(props.defaultValue.value));\r\n    }, [])\r\n\r\n\r\n    if (props.data[0]) {\r\n        return (\r\n            < Select\r\n                defaultValue={props.defaultValue}\r\n                styles={customStyles}\r\n                isSearchable={false}\r\n                options={props.data}\r\n                onChange={({ value }) => {\r\n                    dispatch(props.setOption(value));\r\n                }}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{\r\n                width: 313,\r\n                height: 46,\r\n                border: '1px solid #CBCBCB',\r\n                borderRadius: 4\r\n            }}></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MySelect;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrency, getWithdraw, getInvoice, setInvoiceAmount, setInvoiceCurrentMethod, setWithdrawCurrentMethod } from 'store/exchange-reducer';\r\nimport MySelect from 'components/common/Select/MySelect';\r\nimport s from './exchange.module.scss';\r\nimport Button from 'components/common/Button/Button';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Loader from 'components/common/Loader/Loader';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nconst Exchange = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //получаем список валют с сервера\r\n    useEffect(() => {\r\n        dispatch(getCurrency());\r\n    }, [])\r\n\r\n    //формируем массивы данных для селектов\r\n    const invoice = useSelector((state: any) => state.exchangePage.invoice);\r\n    const withdraw = useSelector((state: any) => state.exchangePage.withdraw);\r\n\r\n    const invoiceToSelect = invoice.map((el: any) => ({\r\n        value: el.id,\r\n        label: el.name\r\n    }));\r\n\r\n    const withdrawToSelect = withdraw.map((el: any) => ({\r\n        value: el.id,\r\n        label: el.name\r\n    }));\r\n\r\n    //определяем начальное значение для селекта \"Sell\"\r\n    const invoiceCurrentMethod = useSelector((state: any) => state.exchangePage.invoiceCurrentMethod);\r\n\r\n    let invoiceDefault;\r\n\r\n    if (invoiceCurrentMethod == null) {\r\n        invoiceDefault = invoiceToSelect[0];\r\n    } else {\r\n        let index = invoice.findIndex((el: any) => el.id === invoiceCurrentMethod);\r\n        invoiceDefault = invoiceToSelect[index];\r\n    }\r\n\r\n    //определяем начальное значение для селекта \"Buy\"\r\n    const withdrawCurrentMethod = useSelector((state: any) => state.exchangePage.withdrawCurrentMethod);\r\n\r\n    let withdrawDefault;\r\n\r\n    if (withdrawCurrentMethod == null) {\r\n        withdrawDefault = withdrawToSelect[0];\r\n    } else {\r\n        let index = withdraw.findIndex((el: any) => el.id === withdrawCurrentMethod);\r\n        withdrawDefault = withdrawToSelect[index];\r\n    }\r\n\r\n    //определяем текущие значения для инпутов \"Sell\" и \"Buy\"\r\n    const invoiceAmount = useSelector((state: any) => state.exchangePage.invoiceAmount);\r\n    const withdrawAmount = useSelector((state: any) => state.exchangePage.withdrawAmount);\r\n\r\n    //запрашиваем расчет суммы обмена для поля ввода Buy(withdraw)\r\n    const changeInvoiceInput = (e: any) => {\r\n        dispatch(getWithdraw(e.target.value));\r\n    }\r\n\r\n    //запрашиваем расчет суммы обмена для поля ввода Sell(invoice)\r\n    const changeWithdrawInput = (e: any) => {\r\n        dispatch(getInvoice(e.target.value));\r\n    }\r\n\r\n    //Получаем текущее состояние isInputFetching\r\n    const isInputFetching = useSelector((state: any) => state.exchangePage.isInputFetching);\r\n\r\n    //Получаем текущее состояние isButtonFetching\r\n    const isButtonFetching = useSelector((state: any) => state.exchangePage.isButtonFetching);\r\n\r\n    //Получаем текущее состояние exchangeСompleted\r\n    const isExchangeСompleted = useSelector((state: any) => state.exchangePage.isExchangeСompleted);\r\n\r\n\r\n    return (\r\n        <section className={s.main}>\r\n            <h1 className=\"visually_hidden\">Exchange page</h1>\r\n\r\n            <div className={isButtonFetching ? classNames(s.wrapper, s.element_disabled) : s.wrapper}>\r\n                <div className={s.methods}>\r\n                    <fieldset className={s.method}>\r\n                        <p className={s.method_title}>Sell</p>\r\n\r\n                        <div className={isInputFetching && s.element_disabled}>\r\n                            <MySelect\r\n                                data={invoiceToSelect}\r\n                                defaultValue={invoiceDefault}\r\n                                setOption={setInvoiceCurrentMethod}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={s.method_input_wrapper}>\r\n                            <DebounceInput\r\n                                className={s.method_input}\r\n                                type=\"number\"\r\n                                minLength={1}\r\n                                value={invoiceAmount}\r\n                                debounceTimeout={1000}\r\n                                readOnly={isInputFetching}\r\n                                onChange={changeInvoiceInput}\r\n                            />\r\n                            {isInputFetching\r\n                                ?\r\n                                <div className={s.method_input_loader}>\r\n                                    <Loader />\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset className={s.method}>\r\n                        <p className={s.method_title}>Buy</p>\r\n\r\n                        <div className={isInputFetching && s.element_disabled}>\r\n                            <MySelect\r\n                                data={withdrawToSelect}\r\n                                defaultValue={withdrawDefault}\r\n                                setOption={setWithdrawCurrentMethod}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={s.method_input_wrapper}>\r\n                            <DebounceInput\r\n                                className={s.method_input}\r\n                                type=\"number\"\r\n                                minLength={1}\r\n                                value={withdrawAmount}\r\n                                debounceTimeout={1000}\r\n                                readOnly={isInputFetching}\r\n                                onChange={changeWithdrawInput}\r\n                            />\r\n                            {isInputFetching\r\n                                ?\r\n                                <div className={s.method_input_loader}>\r\n                                    <Loader />\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n\r\n                <div className={s.button_wrapper}>\r\n                    <NavLink to=\"/confirmation\"\r\n                        className={(!isExchangeСompleted || isInputFetching) && s.element_disabled}\r\n                    >\r\n                        <Button text=\"Exchange\" />\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Exchange;","import Confirmation from 'pages/confirmation/confirmation';\nimport Successful from 'pages/successful/successful';\nimport { Redirect, Route, Switch } from 'react-router';\nimport './App.scss';\nimport Exchange from './pages/exchange/exchange';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/exchange\" />} />\n        <Route path=\"/exchange\" render={() => <Exchange />} />\n        <Route path=\"/confirmation\" render={() => <Confirmation />} />\n        <Route path=\"/successful\" render={() => <Successful/>} />\n        <Route path=\"*\" render={() => <div>404 NotFound</div>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport exchangeReducer from \"./exchange-reducer.ts\";\r\n\r\nlet reducers = combineReducers({\r\n    exchangePage: exchangeReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter, HashRouter\n} from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport {store} from 'store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}